# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
exec swww init
exec swww init; swww img -o DP-2 $wallDir/Shadow.jpg; swww img -o HDMI-A-2 $wallDir/LetsEatGrandma.jpg
set $mod Mod4
# Home row direction keys, like vim
set $left Left
set $down Down
set $up Up
set $right Right
# Your preferred terminal emulator
set $term kitty

set $k1 1 
#KP_End
set $k2 2 
#KP_Down
set $k3 3 
#KP_Next
set $k4 4 
#KP_Left
set $k5 5 
#KP_Begin
set $k6 6 
#KP_Right
set $k7 7 
#KP_Home
set $k8 8 
#KP_Up
set $k9 9 
#KP_Prior

blur enable

set $mon1 DP-2
set $mon2 HDMI-A-2
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun

workspace 1 output $mon1
workspace 2 output $mon1
workspace 3 output $mon1
workspace 4 output $mon1
workspace 5 output $mon1
workspace 6 output $mon1
workspace 7 output $mon1
workspace 8 output $mon1
workspace 9 output $mon1


workspace 10 output $mon2
workspace 11 output $mon2
workspace 12 output $mon2
workspace 13 output $mon2
workspace 14 output $mon2
workspace 15 output $mon2
workspace 16 output $mon2
workspace 17 output $mon2
workspace 18 output $mon2

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

input * {
	xkb_layout "gb"
}

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
		bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
		bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5%
		bindsym XF86AudioPlay	exec playerctl play-pause
		bindsym XF86AudioNext exec playerctl next
		bindsym XF86AudioPrev exec playerctl prev

		bindsym Print exec slurp | grim -g - - | wl-copy

#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+c kill

    # Start your launcher
    bindsym $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+$k1 workspace number 1
    bindsym $mod+$k2 workspace number 2
    bindsym $mod+$k3 workspace number 3
    bindsym $mod+$k4 workspace number 4
    bindsym $mod+$k5 workspace number 5
    bindsym $mod+$k6 workspace number 6
    bindsym $mod+$k7 workspace number 7
    bindsym $mod+$k8 workspace number 8
    bindsym $mod+$k9 workspace number 9

		bindsym $mod+Alt+$k1 workspace number 10
		bindsym $mod+Alt+$k2 workspace number 11
		bindsym $mod+Alt+$k3 workspace number 12
		bindsym $mod+Alt+$k4 workspace number 13
		bindsym $mod+Alt+$k5 workspace number 14
		bindsym $mod+Alt+$k6 workspace number 15
		bindsym $mod+Alt+$k7 workspace number 16
		bindsym $mod+Alt+$k8 workspace number 17
		bindsym $mod+Alt+$k9 workspace number 18

    # Move focused container to workspace
    bindsym $mod+Shift+$k1 move container to workspace number 1
    bindsym $mod+Shift+$k2 move container to workspace number 2
    bindsym $mod+Shift+$k3 move container to workspace number 3
    bindsym $mod+Shift+$k4 move container to workspace number 4
    bindsym $mod+Shift+$k5 move container to workspace number 5
    bindsym $mod+Shift+$k6 move container to workspace number 6
    bindsym $mod+Shift+$k7 move container to workspace number 7
    bindsym $mod+Shift+$k8 move container to workspace number 8
    bindsym $mod+Shift+$k9 move container to workspace number 9

    # Note: workspaces can have any name you want, not just numbers.
		bindsym $mod+Alt+Shift+$k1 move container to workspace number 10
		bindsym $mod+Alt+Shift+$k2 move container to workspace number 11
		bindsym $mod+Alt+Shift+$k3 move container to workspace number 12
		bindsym $mod+Alt+Shift+$k4 move container to workspace number 13
		bindsym $mod+Alt+Shift+$k5 move container to workspace number 14
		bindsym $mod+Alt+Shift+$k6 move container to workspace number 15
		bindsym $mod+Alt+Shift+$k7 move container to workspace number 16
		bindsym $mod+Alt+Shift+$k8 move container to workspace number 17
		bindsym $mod+Alt+Shift+$k9 move container to workspace number 18
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+ctrl+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
